# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet fc-callback "函数组件 useCallback" b
    const ${1}= useCallback(() => {
      try {
       ${2}
      } catch (e) {
        Message.error(e.message);
      }
    }, []);
endsnippet

snippet fc "创建一个函数" b
import type {FC} from 'react'

type Props ={

}

const ${1}:FC<Props> =()=>{
	return <>

	hello
	</>
}

export default ${1}
endsnippet


snippet export-component " 导出组件" b

export type { Props as ${1}Props } from './${1}';
export { default as ${1}} from './${1}';

endsnippet

# arco components snippet

snippet arco-table-render "arco table render" b
    render:(_,row:any)=>{
        return <div>{row.${1}}</div>
	}
endsnippet

snippet lg "console" b
	console.log("this is god tip : ",${1})
endsnippet

